name: Build and Upload to Nexus

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Get Git hash
        id: git-info
        run: |
          GIT_HASH=$(git rev-parse --short HEAD)
          echo "GIT_HASH=$GIT_HASH" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Setup Gradle caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Clean and setup
        run: |
          ./gradlew --stop || true
          rm -rf .gradle/loom-cache
          rm -rf build
          ./gradlew clean

      - name: Download dependencies
        run: ./gradlew --refresh-dependencies downloadAssets

      - name: Generate sources and build
        run: |
          ./gradlew genSources --stacktrace || echo "genSources had issues, continuing..."
          ./gradlew build --stacktrace --no-daemon

      - name: Find JAR file
        id: find-jar
        run: |
          echo "Searching for JAR files..."
          find build/libs -name "*.jar" -type f | while read file; do
            echo "Found: $file"
          done
          
          # Look for the main JAR file
          MAIN_JAR=$(find build/libs -name "*.jar" ! -name "*-dev.jar" ! -name "*-sources.jar" ! -name "*-shadow.jar" -type f | head -1)
          
          if [ -z "$MAIN_JAR" ]; then
            echo "⚠️ No main JAR found, looking for any JAR..."
            MAIN_JAR=$(find build/libs -name "*.jar" -type f | head -1)
          fi
          
          if [ -z "$MAIN_JAR" ]; then
            echo "❌ No JAR files found at all!"
            echo "Build directory contents:"
            ls -la build/ || echo "No build directory"
            ls -la build/libs/ || echo "No libs directory"
            exit 1
          fi
          
          echo "✅ Using JAR: $MAIN_JAR"
          echo "JAR_FILE=$MAIN_JAR" >> $GITHUB_ENV
          echo "JAR_NAME=$(basename "$MAIN_JAR")" >> $GITHUB_ENV

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: paradise-client-build
          path: |
            build/libs/
            build/reports/
          retention-days: 30

      - name: Upload to Nexus
        if: success()
        env:
          NEXUS_URL: ${{ secrets.NEXUS_URL || 'https://paradise-client.net' }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          echo "🚀 Uploading $JAR_NAME to Nexus..."
          echo "Version: $GIT_HASH"
          
          curl -v -X PUT "$NEXUS_URL/api/versions" \
            -u "$NEXUS_USERNAME:$NEXUS_PASSWORD" \
            -F "file=@$JAR_FILE" \
            -F "version=$GIT_HASH" \
            -F "release_date=$(TZ='Asia/Kolkata' date +'%Y-%m-%d %H:%M:%S')"

      - name: Build success message
        if: success()
        run: |
          echo "🎉 Build and upload completed successfully!"
          echo "Version: $GIT_HASH"
          echo "JAR: $JAR_NAME"

      - name: Build failure message
        if: failure()
        run: |
          echo "💥 Build failed!"
          echo "Check the previous steps for compilation errors."
