package net.paradise_client.command.impl;

import net.minecraft.network.chat.Component;
import net.paradise_client.helpers.PacketHelper;
import net.paradise_client.utils.OptionType;
import net.paradise_client.utils.OptionUtil;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Random;

public class CommandsExploit implements Exploit {
    private static final String COMMAND_NAME = "ContentSpammer";
    private final Random random = new Random();

    @Override
    public void onExploit(String[] args) {
        if (args.length < 6) {
            sendChatMessage("Usage: ,commandsexploit <power> <mode> <interval> <content>");
            return;
        }

        int power;
        try {
            power = Integer.parseInt(args[2]);
        } catch (NumberFormatException e) {
            sendChatMessage("Invalid power value. Must be a number.");
            return;
        }

        String mode = args[3].toLowerCase(Locale.ROOT);
        int interval;
        try {
            interval = Integer.parseInt(args[4]);
        } catch (NumberFormatException e) {
            sendChatMessage("Invalid interval value. Must be a number (milliseconds).");
            return;
        }

        String content = args[5].replace("[-space-]", " ");

        sendChatMessage(String.format("Sending Exploit... [%s]", getName()));

        if (content.startsWith("/") && mode.equals("command")) {
            content = content.substring(1);
        }
        String finalContent = content;

        // Start spam thread
        new Thread(() -> {
            try {
                for (int i = 0; i < power; i++) {
                    switch (mode) {
                        case "command" -> PacketHelper.sendCommand(finalContent.replace("@r", getRandomName()));
                        case "message" -> PacketHelper.sendChat(finalContent.replace("@r", getRandomName()));
                        default -> {
                            sendChatMessage("Unknown mode: " + mode);
                            return;
                        }
                    }
                    Thread.sleep(interval);
                }
                sendChatMessage("Exploit successfully sent!");
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
                sendChatMessage("Exploit interrupted.");
            }
        }).start();
    }

    private String getRandomName() {
        try {
            List<String> possibleNames = new ArrayList<>();

            if (mc.player != null && mc.player.connection != null) {
                mc.player.connection.getListedOnlinePlayers().forEach(player ->
                        possibleNames.add(player.getProfile().getName()));
            }

            if (possibleNames.isEmpty()) {
                return "xynis";
            }

            String randomName = possibleNames.get(random.nextInt(possibleNames.size()));
            return randomName.isBlank() ? "xynis" : randomName;

        } catch (Exception e) {
            return "xynis";
        }
    }

    private void sendChatMessage(String message) {
        if (mc.player != null) {
            mc.player.sendSystemMessage(Component.literal(message));
        }
    }

    @Override
    public String getName() {
        return COMMAND_NAME;
    }

    @Override
    public List<OptionUtil> getOptions() {
        return List.of(
                new OptionUtil("Power", OptionType.INTEGER),
                new OptionUtil("Mode", OptionType.LIST, new String[]{"Command", "Message"}),
                new OptionUtil("Interval", OptionType.INTEGER),
                new OptionUtil("Content", OptionType.MULTIPART)
        );
    }

    @Override
    public String getArgsUsage() {
        return "power[1], mode[Command], interval[100], content[party xynis]";
    }

    @Override
    public String getDescription() {
        return "Command/Message Spammer";
    }
            }
