plugins {
    id 'fabric-loom' version '1.10.1'
    id 'maven-publish'
}

def gitHash = {
    def stdout = new ByteArrayOutputStream()
    try {
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
            ignoreExitValue = true
        }
        return stdout.toString().trim()
    } catch (Exception e) {
        return "unknown"
    }
}.call()

version = "1.0.0+" + gitHash
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { 
        name = "Fabric"
        url = "https://maven.fabricmc.net/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Core Minecraft and Fabric for 1.21.5
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    
    // Fabric API for 1.21.5 - CORRECT VERSION
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    
    // Your dependencies
    implementation "net.sf.trove4j:trove4j:3.0.3"
    implementation "se.llbit:jo-nbt:1.2.0"
    implementation "dev.dejvokep:boosted-yaml:${project.boosted_yaml_version}"
    implementation "mysql:mysql-connector-java:${project.mysql}"
    implementation "io.netty:netty-all:${project.netty}"
    
    // Discord RPC - ADD THIS
    implementation 'com.github.Vatuu:discord-rpc:1.6.2'
    // Or use the newer fork:
    // implementation 'com.github.jagrosh:DiscordRPC:1.3.0'
    
    // Include them in the jar
    include "net.sf.trove4j:trove4j:3.0.3"
    include "se.llbit:jo-nbt:1.2.0"
    include "dev.dejvokep:boosted-yaml:${project.boosted_yaml_version}"
    include 'com.github.Vatuu:discord-rpc:1.6.2'
    // include 'com.github.jagrosh:DiscordRPC:1.3.0'
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
               "minecraft_version": project.minecraft_version,
               "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

loom {
    runs {
        client {
            client()
            name = "Minecraft Client"
            runDir = "run"
            source = sourceSets.main
        }
        server {
            server()
            name = "Minecraft Server"
            runDir = "run"
            source = sourceSets.main
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
